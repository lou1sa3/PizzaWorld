spring.application.name=PizzaWorld


#DB-Anbindung - SECURE: Only from environment variables
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.devtools.restart.enabled=false


# Optimized Hikari Connection Pool Settings (Enhanced for 2GB RAM)
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.leak-detection-threshold=60000

# PostgreSQL-specific settings to prevent prepared statement conflicts
spring.datasource.hikari.data-source-properties.cachePrepStmts=false
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=0
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=0
spring.datasource.hikari.data-source-properties.useServerPrepStmts=false
spring.datasource.hikari.data-source-properties.autoCommit=true
spring.datasource.hikari.data-source-properties.reWriteBatchedInserts=true

# Additional PostgreSQL settings to fix connection issues
spring.datasource.hikari.data-source-properties.ssl=true
spring.datasource.hikari.data-source-properties.sslmode=require
spring.datasource.hikari.data-source-properties.tcpKeepAlive=true

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false


# Performance logging (Enhanced for 2GB RAM)
logging.level.org.springframework.security=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

spring.datasource.hikari.connection-init-sql=DEALLOCATE ALL
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Email Configuration - Gmail SMTP (Optimized for Speed)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=pizzaworldplus@gmail.com
spring.mail.password=${GMAIL_APP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Email Performance Optimization - Fast Delivery
spring.mail.properties.mail.smtp.connectiontimeout=3000
spring.mail.properties.mail.smtp.timeout=2000
spring.mail.properties.mail.smtp.writetimeout=2000
spring.mail.properties.mail.smtp.connectionpoolsize=10
spring.mail.properties.mail.smtp.connectionpooltimeout=300000
spring.mail.properties.mail.smtp.sendpartial=true

# Google AI Configuration for Gemini Integration
google.ai.api.key=${GOOGLE_AI_API_KEY:}
google.ai.model=${GOOGLE_AI_MODEL:gemma-3n-e4b-it}
google.ai.enabled=${GOOGLE_AI_ENABLED:false}

# OpenRouter Multi-Model Configuration
openrouter.api.key=${OPENROUTER_API_KEY:}
openrouter.enabled=${OPENROUTER_ENABLED:true}

# Primary Model
openrouter.model.1=${OPENROUTER_MODEL_1:openrouter/cypher-alpha:free}
openrouter.max.tokens.1=${OPENROUTER_MAX_TOKENS_1:50000}

# Fallback Models
openrouter.model.2=${OPENROUTER_MODEL_2:google/gemini-2.0-flash-exp:free}
openrouter.max.tokens.2=${OPENROUTER_MAX_TOKENS_2:60000}

openrouter.model.3=${OPENROUTER_MODEL_3:deepseek/deepseek-chat-v3-0324:free}
openrouter.max.tokens.3=${OPENROUTER_MAX_TOKENS_3:15000}

openrouter.model.4=${OPENROUTER_MODEL_4:qwen/qwq-32b:free}
openrouter.max.tokens.4=${OPENROUTER_MAX_TOKENS_4:40000}

openrouter.model.5=${OPENROUTER_MODEL_5:nvidia/llama-3.3-nemotron-super-49b-v1:free}
openrouter.max.tokens.5=${OPENROUTER_MAX_TOKENS_5:40000}


